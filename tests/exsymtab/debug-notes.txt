 A exsymtab extension to the tcc is developed by David Mertens
 His branch of the tcc on github is https://github.com/run4flat/tinycc.git
 A full version of this file is located there.
 This files are from the commit:

    commit bc3d60fc8f61a3f2fe838b6a9cb24202a462dc36
    Author: David Mertens
    Date:   Mon Nov 30 15:26:21 2015 -0500
        Fix off-by-one error in tokenstream copy

TODO
====

- Write a struct declaration sharing test that uses non-int types, like float or char[10]
- Write tests for extended symbol table traps discussed on May 1
- variable interpolation: function unary() in tccgen.c
- may need to clear the .c field of each sym's type after each context's use
- check for pad entries using pad_findmy_pv or pad_findmy_pvn, then get the sv using PAD_SV

====
...................................
...................................

July 10, 2015
=============

Things are going quite well, and appear to be focusing in on the corner
cases. I have two (new) failing tests at the moment, 62 and 63. One works
with static integers and the other works with enum members (which are
also static integers in tcc). Both tests fail, but for different
reason. Test 62 (static ints) fails saying 

 tcc: error: undefined symbol '<static-var-name>'

This error is issued by tccelf during the linking stage, and similar
problems were resolved in the past by setting the VT_EXTERN flag on the
type.t field. However, the Syms for these variables should pass those
tests, and so should already be marked with VT_EXTERN.

Test 63 (enums) fails compiles but has the wrong values for the enum
constants. Oddly enough, DIAG statements tell me that
tcc_get_extended_symbol was unable to find each of the enum symbol
names, so they would not have been added by tcc_add_symbol; this was not
a problem with test 62.

It is not yet clear to me how to handle all of this. It may be correct
for static variable to not live outside their compilaton context---I
would be fine if that's what the C standard wants---but I feel that
enums really need to be available.

---

Further investigations led me to modify a few checks in the c field
copying during the exsymtab copy process. This allows enum declarations
to work as expected, and somehow prevents static globals from bleeding
across compilation units! I'm not quite sure how I pulled that off, but
I'll take it!
